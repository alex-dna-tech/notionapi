package notionapi

type PublicSpaceData struct {
	Results []PublicSpaceDataResult `json:"results"`
	RawJSON map[string]interface{}  `json:"-"`
}
type PublicSpaceDataResult struct {
	ID                               string `json:"id"`
	Name                             string `json:"name"`
	Domain                           string `json:"domain"`
	DomainIsAutogenerated            bool   `json:"domainIsAutogenerated"`
	Icon                             string `json:"icon"`
	ProductID                        string `json:"productId"`
	MemberCount                      int    `json:"memberCount"`
	DisablePublicAccess              bool   `json:"disablePublicAccess"`
	DisableGuests                    bool   `json:"disableGuests"`
	DisableMoveToSpace               bool   `json:"disableMoveToSpace"`
	DisableExport                    bool   `json:"disableExport"`
	CreatedTime                      int64  `json:"createdTime"`
	PlanType                         string `json:"planType"`
	InviteLinkEnabled                bool   `json:"inviteLinkEnabled"`
	HasPublicPagesAfterNotionDotSite bool   `json:"hasPublicPagesAfterNotionDotSite"`
}

// GetPublicSpaceData executes a raw API call /api/v3/getPublicSpaceData
func (c *Client) GetPublicSpaceData(spaceIDs []string) (*PublicSpaceData, error) {
	req := &struct {
		Type     string   `json:"type"`
		SpaceIDs []string `json:"spaceIds"`
	}{
		Type:     "space-ids",
		SpaceIDs: spaceIDs,
	}

	var rsp PublicSpaceData
	var err error
	apiURL := "/api/v3/getPublicSpaceData"
	rsp.RawJSON, err = c.doNotionAPI(apiURL, req, &rsp)
	if err != nil {
		return nil, err
	}

	return &rsp, nil
}
